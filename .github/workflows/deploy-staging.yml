name: Deploy to Staging

on:
  push:
    branches:
      - dev
      - main
  workflow_run:
    workflows: ["Multi-Dashboard CI Pipeline"]
    types:
      - completed
    branches:
      - dev
      - main

env:
  NODE_VERSION: "18.x"

jobs:
  deploy-backend:
    name: Deploy Backend to Staging
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Download Backend Build
        id: download-backend
        if: github.event_name == 'workflow_run'
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: packages/backend/dist/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Build Backend (if no artifact)
        if: github.event_name == 'push' || steps.download-backend.outcome == 'failure'
        run: npm run build --workspace=packages/backend

      - name: Deploy to Backend Staging
        run: |
          echo "Deploying backend to staging environment..."
          echo "Backend API will be available at: https://api-staging.yourdomain.com"
          # Add your deployment commands here (e.g., Docker, SSH, cloud deployment)

  deploy-admin:
    name: Deploy Admin Dashboard to Staging
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Download Admin Build
        id: download-admin
        if: github.event_name == 'workflow_run'
        uses: actions/download-artifact@v4
        with:
          name: admin-build
          path: packages/admin-dashboard/.next/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Build Admin Dashboard (if no artifact)
        if: github.event_name == 'push' || steps.download-admin.outcome == 'failure'
        run: npm run build --workspace=packages/admin-dashboard
        env:
          NEXT_PUBLIC_ENV: staging

      - name: Deploy Admin Dashboard
        run: |
          echo "Deploying admin dashboard to staging..."
          echo "Admin Dashboard will be available at: https://admin-staging.yourdomain.com"
          # Add your deployment commands here (e.g., Netlify, S3)

  deploy-user:
    name: Deploy User Dashboard to Staging
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Download User Build
        id: download-user
        if: github.event_name == 'workflow_run'
        uses: actions/download-artifact@v4
        with:
          name: user-build
          path: packages/user-dashboard/.next/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Build User Dashboard (if no artifact)
        if: github.event_name == 'push' || steps.download-user.outcome == 'failure'
        run: npm run build --workspace=packages/user-dashboard
        env:
          NEXT_PUBLIC_ENV: staging

      - name: Deploy User Dashboard
        run: |
          echo "Deploying user dashboard to staging..."
          echo "User Dashboard will be available at: https://app-staging.yourdomain.com"
          # Add your deployment commands here

  deploy-frontend:
    name: Deploy Frontend to Staging
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Download Frontend Build
        id: download-frontend
        if: github.event_name == 'workflow_run'
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: packages/frontend/.next/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Build Frontend (if no artifact)
        if: github.event_name == 'push' || steps.download-frontend.outcome == 'failure'
        run: npm run build --workspace=packages/frontend
        env:
          NEXT_PUBLIC_ENV: staging

      - name: Deploy Frontend
        run: |
          echo "Deploying frontend to staging..."
          echo "Frontend will be available at: https://staging.yourdomain.com"
          # Add your deployment commands here

  notify-deployment:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-admin, deploy-user, deploy-frontend]
    if: always()
    steps:
      - name: Deployment Notification
        run: |
          echo "ðŸš€ Deployment Summary:"
          echo "Backend: ${{ needs.deploy-backend.result }}"
          echo "Admin Dashboard: ${{ needs.deploy-admin.result }}"
          echo "User Dashboard: ${{ needs.deploy-user.result }}"
          echo "Frontend: ${{ needs.deploy-frontend.result }}"

          if [ "${{ needs.deploy-backend.result }}" = "success" ]; then
            echo "âœ… Backend deployed successfully to https://api-staging.yourdomain.com"
          fi

          if [ "${{ needs.deploy-admin.result }}" = "success" ]; then
            echo "âœ… Admin Dashboard deployed successfully to https://admin-staging.yourdomain.com"
          fi

          if [ "${{ needs.deploy-user.result }}" = "success" ]; then
            echo "âœ… User Dashboard deployed successfully to https://app-staging.yourdomain.com"
          fi

          if [ "${{ needs.deploy-frontend.result }}" = "success" ]; then
            echo "âœ… Frontend deployed successfully to https://staging.yourdomain.com"
          fi
