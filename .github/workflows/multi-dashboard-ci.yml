name: Multi-Dashboard CI Pipeline

on:
  push:
    branches:
      - dev
      - main
      - master
      - "feature/**"
      - "bugfix/**"
      - "hotfix/**"
  pull_request:
    branches:
      - dev
      - main
      - master

env:
  NODE_VERSION: "18.x"
  PROJECT_NAME: "Smart Business AI Assistant"

jobs:
  # Detect Changes
  detect-changes:
    name: Detect Changed Packages
    runs-on: ubuntu-latest
    outputs:
      backend-changed: ${{ steps.changes.outputs.backend }}
      admin-changed: ${{ steps.changes.outputs.admin }}
      user-changed: ${{ steps.changes.outputs.user }}
      frontend-changed: ${{ steps.changes.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            backend:
              - 'packages/backend/**'
            admin:
              - 'packages/admin-dashboard/**'
            user:
              - 'packages/user-dashboard/**'
            frontend:
              - 'packages/frontend/**'

  # Backend Testing
  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.backend-changed == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - run: npm ci
      - run: npm run test:ci --workspace=packages/backend

  # Admin Dashboard Testing
  test-admin:
    name: Test Admin Dashboard
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.admin-changed == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - run: npm ci
      - run: npm run test:ci --workspace=packages/admin-dashboard

  # User Dashboard Testing
  test-user:
    name: Test User Dashboard
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.user-changed == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - run: npm ci
      - run: npm run test:ci --workspace=packages/user-dashboard

  # Build Backend
  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest
    needs: [detect-changes, test-backend]
    if: always() && (needs.detect-changes.outputs.backend-changed == 'true' && (needs.test-backend.result == 'success' || needs.test-backend.result == 'skipped'))
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - run: npm ci
      - run: npm run build --workspace=packages/backend
      - uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: packages/backend/dist/

  # Build Admin Dashboard
  build-admin:
    name: Build Admin Dashboard
    runs-on: ubuntu-latest
    needs: [detect-changes, test-admin]
    if: always() && (needs.detect-changes.outputs.admin-changed == 'true' && (needs.test-admin.result == 'success' || needs.test-admin.result == 'skipped'))
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - run: npm ci
      - run: npm run build --workspace=packages/admin-dashboard
      - uses: actions/upload-artifact@v4
        with:
          name: admin-build
          path: packages/admin-dashboard/.next/

  # Build User Dashboard
  build-user:
    name: Build User Dashboard
    runs-on: ubuntu-latest
    needs: [detect-changes, test-user]
    if: always() && (needs.detect-changes.outputs.user-changed == 'true' && (needs.test-user.result == 'success' || needs.test-user.result == 'skipped'))
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
      - run: npm ci
      - run: npm run build --workspace=packages/user-dashboard
      - uses: actions/upload-artifact@v4
        with:
          name: user-build
          path: packages/user-dashboard/.next/
