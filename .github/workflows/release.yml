name: 📦 Automated Release

on:
  push:
    branches: [master, dev]
    paths:
      - "package.json"
      - "packages/*/package.json"
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release Type"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  # 🏷️ Create Release
  release:
    name: 🏷️ Create Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    outputs:
      version: ${{ steps.version.outputs.version }}
      changelog: ${{ steps.changelog.outputs.changelog }}

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"

      - name: 📋 Get Current Version
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $VERSION"

      - name: 📝 Generate Changelog
        id: changelog
        run: |
          echo "## 🎉 What's New in Smart Business AI Assistant v${{ steps.version.outputs.version }}" > RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "### ✨ Features & Improvements" >> RELEASE_NOTES.md
          git log --oneline --grep="feat:" --since="1 week ago" | sed 's/^/- /' >> RELEASE_NOTES.md || echo "- No new features in this release" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "### 🐛 Bug Fixes" >> RELEASE_NOTES.md
          git log --oneline --grep="fix:" --since="1 week ago" | sed 's/^/- /' >> RELEASE_NOTES.md || echo "- No bug fixes in this release" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "### 📚 Documentation" >> RELEASE_NOTES.md
          git log --oneline --grep="docs:" --since="1 week ago" | sed 's/^/- /' >> RELEASE_NOTES.md || echo "- No documentation updates in this release" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "### 🛠️ Technical Changes" >> RELEASE_NOTES.md
          git log --oneline --grep="chore:\|refactor:" --since="1 week ago" | sed 's/^/- /' >> RELEASE_NOTES.md || echo "- No technical changes in this release" >> RELEASE_NOTES.md

          CHANGELOG=$(cat RELEASE_NOTES.md)
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 🏷️ Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: 🚀 Smart Business AI Assistant v${{ steps.version.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false

  # 📦 Build Release Assets
  build-assets:
    name: 📦 Build Release Assets
    runs-on: ubuntu-latest
    needs: release

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          cache: "npm"

      - name: 📋 Install Dependencies
        run: npm install

      - name: 🏗️ Build Application
        run: |
          npm run build

      - name: 📦 Create Release Archive
        run: |
          mkdir -p release-assets

          # Backend build
          cd packages/backend
          tar -czf ../../release-assets/smart-business-ai-backend-v${{ needs.release.outputs.version }}.tar.gz dist/ package.json package-lock.json
          cd ../..

          # Frontend build  
          cd packages/frontend
          tar -czf ../../release-assets/smart-business-ai-frontend-v${{ needs.release.outputs.version }}.tar.gz .next/ package.json package-lock.json public/
          cd ../..

          # Complete source
          tar -czf release-assets/smart-business-ai-assistant-v${{ needs.release.outputs.version }}-source.tar.gz . --exclude=node_modules --exclude=.git --exclude=dist --exclude=.next

      - name: 📤 Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.release.outputs.version }}
          files: |
            release-assets/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # 🐳 Docker Build (Optional)
  docker-build:
    name: 🐳 Docker Build
    runs-on: ubuntu-latest
    needs: release
    if: false # Set to true when you want to enable Docker builds

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏗️ Build and Push Docker Images
        run: |
          echo "🐳 Docker build would happen here"
          echo "📦 Images would be tagged as v${{ needs.release.outputs.version }}"
