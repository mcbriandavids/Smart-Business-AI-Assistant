name: CI/CD Pipeline

on:
  push:
    branches: [dev, "feature/**", "bugfix/**", "hotfix/**"]
  pull_request:
    branches: [dev]

env:
  NODE_VERSION: "18.x"

jobs:
  # Test and Build
  test-and-build:
    name: Test and Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Backend Dependencies
        run: |
          cd packages/backend
          npm ci

      - name: Install Frontend Dependencies
        run: |
          cd packages/frontend
          npm ci

      - name: Lint Backend
        run: |
          cd packages/backend
          npm run lint || echo "Linting warnings"

      - name: Test Backend
        run: |
          cd packages/backend
          npm test

      - name: Build Backend
        run: |
          cd packages/backend
          npm run build

      - name: Lint Frontend
        run: |
          cd packages/frontend
          npm run lint || echo "Linting warnings"

      - name: Test Frontend
        run: |
          cd packages/frontend
          npm test

      - name: Build Frontend
        run: |
          cd packages/frontend
          npm run build

      - name: Security Audit
        continue-on-error: true
        run: |
          cd packages/backend && npm audit --audit-level=moderate || echo "Backend audit warnings"
          cd ../frontend && npm audit --audit-level=moderate || echo "Frontend audit warnings"

  # Auto-promote to main if on dev branch
  promote-to-main:
    name: Promote to Main
    runs-on: ubuntu-latest
    needs: test-and-build
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
    
    steps:
      - name: Checkout Dev Branch
        uses: actions/checkout@v4
        with:
          ref: dev
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Promote to Main
        run: |
          echo "Promoting dev branch to main for production..."
          
          # Create or switch to main branch
          git checkout main 2>/dev/null || git checkout -b main
          
          # Merge dev into main
          git merge dev --no-ff -m "Production Release: Merge dev to main"
          
          # Push to main branch
          git push origin main

      - name: Create Release Tag
        run: |
          TAG_NAME="release-$(date +%Y%m%d-%H%M%S)"
          git tag -a "$TAG_NAME" -m "Production Release $TAG_NAME"
          git push origin "$TAG_NAME"
          echo "Created release tag: $TAG_NAME"